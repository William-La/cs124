{"version":3,"sources":["TabModal.js","Tabs.js","Header.js","Checkbox.js","OurModal.js","Dropdown.js","Task.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","BasicModal","props","useState","open","setOpen","handleClose","input","setInput","inputTask","useRef","Button","aria-label","onClick","color","Modal","onClose","aria-labelledby","aria-describedby","Box","sx","Typography","id","variant","component","mt","onSubmit","onNewTab","type","maxlength","placeholder","ref","value","onChange","e","target","FullWidthTabs","theme","useTheme","ThemeProvider","handleNewTab","AppBar","Tabs","tab","event","newValue","handleTab","indicatorColor","textColor","scrollButtons","TabIndicatorProps","background","tabs","map","tabId","Tab","title","role","label","aria-controls","icon","class","onKeyPress","handleDeleteTab","iconPosition","root","paddingTop","capitalize","str","charAt","toUpperCase","slice","Header","DropDown","itemOne","itemTwo","itemThree","action","minWidth","FormControl","fullWidth","InputLabel","htmlFor","NativeSelect","defaultValue","inputProps","view","sort","Checkbox","aria-pressed","completed","onCompleted","backgroundColor","priorityColor","marginLeft","OurModal","priority","setPriority","modalText","handleAction","newItem","name","checked","currentTarget","for","preventDefault","submitText","StyledMenu","styled","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","palette","mode","grey","padding","fontSize","text","secondary","marginRight","spacing","alpha","primary","main","selectedOpacity","Dropdown","modalOpen","setModalOpen","handleModalClose","React","anchorEl","setAnchorEl","Boolean","aria-haspopup","aria-expanded","undefined","disableElevation","endIcon","MenuListProps","MenuItem","disableRipple","onDeleteTask","onEdit","closeText","Task","List","db","handleOpen","query","collection","orderBy","sortQuery","useCollection","loading","tasks","handleDeleteAll","completedTasks","task","handleDeleteTask","doc","delete","handleEditTask","field","update","docs","filter","data","getTasks","tabNum","a","key","newId","generateUniqueID","set","date","Date","toLocaleString","handleNewTask","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","setTab","setView","setSort","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ygBAOMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAGU,SAASC,EAAWC,GAC/B,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAClC,EAA0BF,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACMC,EAAYC,iBAAO,MAYzB,OACI,2BACI,gBAACC,EAAA,EAAD,CAAQC,aAAW,kBAAkBC,QAjB1B,kBAAMR,GAAQ,IAkBjBd,MAAO,CAACuB,MAAM,UADtB,mBAGA,gBAACC,EAAA,EAAD,CACAX,KAAMA,EACNY,QAASV,EACTW,kBAAgB,oBAChBC,mBAAiB,2BAEjB,gBAACC,EAAA,EAAD,CAAKC,GAAI7B,GACL,gBAAC8B,EAAA,EAAD,CAAYC,GAAG,oBAAoBC,QAAQ,KAAKC,UAAU,MAA1D,qBAGA,gBAACH,EAAA,EAAD,CAAYC,GAAG,0BAA0BF,GAAI,CAAEK,GAAI,IAAnD,+BAGA,wBAAMC,SA5BlB,WACIxB,EAAMyB,SAASpB,GACfC,EAAS,IACTF,MA2BQ,yBAAOgB,GAAG,eACFM,KAAK,OACLC,UAAY,KACZC,YAAa5B,EAAM4B,YACnBC,IAAKtB,EACLuB,MAAOzB,EACP0B,SA9BpB,SAAsBC,GAClB1B,EAAS0B,EAAEC,OAAOH,UAqBV,IAQkC,2BAClC,yBAAOV,GAAG,eAAeM,KAAK,SAASI,MAAO,oBAC9C,yBAAOJ,KAAK,SAASN,GAAG,cAAcT,QAASP,EAAa0B,MAAM,eC1CnE,SAASI,EAAclC,GACpC,IAAMmC,EAAQC,cAQd,OACE,gBAACC,EAAA,EAAD,CAAeF,MAAOA,GACtB,gBAAClB,EAAA,EAAD,CAAKC,GAAI,CAACxB,MAAO,UAEd,gBAAC,EAAD,CAAU0B,GAAG,WAAWK,SAAUzB,EAAMsC,eACzC,gBAACC,EAAA,EAAD,CAAQjD,SAAS,UACf,gBAACkD,EAAA,EAAD,CACEV,MAAO9B,EAAMyC,IACbV,SAZa,SAACW,EAAOC,GAC3B3C,EAAM4C,UAAUD,IAYVE,eAAe,UACfC,UAAU,UACVzB,QAAQ,aACR0B,cAAc,OACdC,kBAAmB,CAAC3D,MAAO,CAAC4D,WAAW,UACtCvC,aAAW,eAEXV,EAAMkD,KAAKC,KAAI,SAACV,GAAD,MAAuB,MAAdA,EAAIW,MAE3B,gBAACC,EAAA,EAAD,CAAK3C,aAAY+B,EAAIa,MACjBC,KAAK,SACLC,MAAOf,EAAIa,MACXlC,GAAI,kBAAkBqB,EAAIW,MAC1BK,gBAAe,uBAAuBhB,EAAIW,MAC1CtB,MAAOW,EAAIW,QAEf,gBAACC,EAAA,EAAD,CAEIK,KACE,0BAAQC,MAAM,oBAAoBjD,aAAY,UAAY+B,EAAIa,MAAO5B,KAAK,SAASkC,WAAY,kBAAM5D,EAAM6D,gBAAgBpB,EAAIW,SAC/H,gBAAC,IAAD,CAAOG,KAAK,SAASnC,GAAIqB,EAAIW,MAAOzC,QAAS,kBAAMX,EAAM6D,gBAAgBpB,EAAIW,WAG/E1C,aAAY+B,EAAIa,MAChBC,KAAK,SACLO,aAAa,QACbN,MAAOf,EAAIa,MACXlC,GAAI,kBAAkBqB,EAAIW,MAC1BK,gBAAe,OAAOhB,EAAIW,MAC1BtB,MAAOW,EAAIW,eC5D3B,IAAM/D,EAAS,CACb0E,KAAM,CAEJC,WAAY,QACZvE,UAAW,eAKf,SAASwE,EAAWC,GAClB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GA+ClCC,MA1Cf,SAAgBtE,GAEZ,SAASuE,EAASjB,EAAOkB,EAASC,EAASC,EAAWC,GAElD,OACI,yBAAKhB,MAAM,WAAWtE,MAAOA,EAAM0E,MACnC,kBAAC9C,EAAA,EAAD,CAAKC,GAAI,CAAE0D,SAAU,MACnB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CAAY1D,QAAQ,WAAW2D,QAAQ,uBACpC1B,GAEH,kBAAC2B,EAAA,EAAD,CACAlD,SAAU,SAACC,GAAD,OAAO2C,EAAO3C,EAAEC,OAAOH,QAC/BoD,aAAc,EACdC,WAAY,CACVzD,KAAM,OACNN,GAAI,wBAIN,4BAAQU,MAAO0C,GAAUP,EAAWO,IACpC,4BAAQ1C,MAAO2C,GAAUR,EAAWQ,IACpC,4BAAQ3C,MAAO4C,GAAYT,EAAWS,QAQpD,OAAO,6BACH,yBAAKf,MAAM,UACT,yBAAKJ,KAAK,QAAQI,MAAM,QAAQjD,aAAW,SACzC,wBAAIU,GAAG,SAAP,UAEA,yBAAKuC,MAAM,QAAQY,EAAS,OAAQ,MAAO,YAAa,cAAevE,EAAMoF,OAC7E,yBAAKzB,MAAM,QAAQY,EAAS,OAAQ,OAAQ,QAAS,WAAYvE,EAAMqF,OACvE,kBAAC,EAASrF,M,kDCjCPsF,MAff,SAAkBtF,GACd,OAAO,6BAGH,4BAAQuF,eAAcvF,EAAMwF,UAAW9E,cAbxB8E,EAakDxF,EAAMwF,UAZvEA,EACO,kBAEA,iBAS4EjC,KAAK,SAASI,MAAM,gBAAiBhD,QAASX,EAAMyF,YAAapG,MAAO,CAACqG,gBAAiB1F,EAAM2F,gBAG9K3F,EAAMwF,UAAY,yBAAK7B,MAAM,aAAX,IAAwB,kBAAC,IAAD,CAAWvC,GAAG,eAAsB,yBAAKuC,MAAM,kBAhBtG,IAAuB6B,G,kGCKjBnG,G,OAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,aACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,EACH8F,WAAY,WAIC,SAASC,EAAS7F,GAC/B,MAA0BC,mBAASD,EAAMsD,OAAzC,mBAAOjD,EAAP,KAAcC,EAAd,KACA,EAAgCL,mBAASD,EAAM8F,UAA/C,mBAAOA,EAAP,KAAiBC,EAAjB,KACMxF,EAAYC,iBAAO,MAkBzB,OAEE,kBAACK,EAAA,EAAD,CACEX,KAAMF,EAAME,KACZa,kBAAgB,oBAChBC,mBAAiB,2BACjB,kBAACC,EAAA,EAAD,CAAKC,GAAI7B,GACP,kBAAC8B,EAAA,EAAD,CAAYC,GAAG,oBAAoBC,QAAQ,KAAKC,UAAU,MACvDtB,EAAMgG,WAET,0BAAMxE,SAvBZ,WACExB,EAAMiG,aAAa5F,EAAOyF,GAGtB9F,EAAMkG,UACR5F,EAAS,IACTyF,EAAY,QAkBR,+BAEA,2BAAO3E,GAAG,YACFM,KAAK,OACLC,UAAY,KACZC,YAAa5B,EAAM4B,YACnBC,IAAKtB,EACLuB,MAAOzB,EACP0B,SAvBhB,SAAsBC,GAClB1B,EAAS0B,EAAEC,OAAOH,WAwBhB,6BAEA,kBAACX,EAAA,EAAD,CAAYC,GAAG,uBAAuBC,QAAQ,KAAKC,UAAU,MAA7D,4BAKE,2BAAOF,GAAG,eACF+E,KAAK,WACLzE,KAAK,QACLI,MAAO,IACPsE,QAAsB,MAAbN,EACT/D,SAAW,SAAAC,GAAC,OAAI+D,EAAY/D,EAAEqE,cAAcvE,UAGlD,2BAAOwE,IAAI,gBAAX,QAAsC,6BACtC,2BAAOlF,GAAG,iBACJ+E,KAAK,WACLzE,KAAK,QACLI,MAAO,IACPsE,QAAsB,MAAbN,EACT/D,SAAW,SAAAC,GAAC,OAAI+D,EAAY/D,EAAEqE,cAAcvE,UAElD,2BAAOwE,IAAI,kBAAX,UAA0C,6BAC1C,2BAAOlF,GAAG,cACJ+E,KAAK,WACLzE,KAAK,QACLI,MAAO,IACPsE,QAAsB,MAAbN,EACT/D,SAAW,SAACC,GAAOA,EAAEuE,iBAAkBR,EAAY/D,EAAEqE,cAAcvE,UAEzE,2BAAOwE,IAAI,eAAX,OAAoC,6BACtC,6BACA,2BAAOlF,GAAG,eAAeM,KAAK,SAASI,MAAO9B,EAAMwG,aACpD,2BAAO9E,KAAK,SAASN,GAAG,cAAcT,QAASX,EAAMI,YAAa0B,MAAM,cCtFlF,IAAM2E,EAAaC,aAAO,SAAC1G,GAAD,OAClB,kBAAC2G,EAAA,EAAD,eACEC,UAAW,EACXC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAEV/G,MAXK0G,EAaV,gBAAGvE,EAAH,EAAGA,MAAH,MAAgB,CAIjB,mBAAoB,CAClB8E,aAAc,EAEdrC,SAAU,IACVhE,MACyB,UAAvBuB,EAAM+E,QAAQC,KAAmB,kBAAoBhF,EAAM+E,QAAQE,KAAK,KAC1EvH,UACE,uJACF,kBAAmB,CACjBwH,QAAS,SAEX,sBAAuB,CACrB,qBAAsB,CACpBC,SAAU,GACV1G,MAAOuB,EAAM+E,QAAQK,KAAKC,UAC1BC,YAAatF,EAAMuF,QAAQ,MAE7B,WAAY,CACVhC,gBAAiBiC,YACfxF,EAAM+E,QAAQU,QAAQC,KACtB1F,EAAM+E,QAAQvC,OAAOmD,wBAOhB,SAASC,EAAS/H,GAC/B,MAAkCC,oBAAS,GAA3C,mBAAO+H,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,kBAAMD,GAAa,IAC5C,EAAgCE,IAAMlI,SAAS,MAA/C,mBAAOmI,EAAP,KAAiBC,EAAjB,KACMnI,EAAOoI,QAAQF,GAOfhI,EAAc,WAClBiI,EAAY,OAQd,OACE,6BAEE,kBAAC5H,EAAA,EAAD,CACEW,GAAG,yBACHqC,gBAAc,uBACd8E,gBAAc,OACdC,gBAAetI,EAAO,YAASuI,EAC/BpH,QAAQ,YACRqH,kBAAgB,EAChB/H,QAvBc,SAAC+B,GACnB2F,EAAY3F,EAAM2D,gBAuBdsC,QAAS,kBAAC,IAAD,QASX,kBAAClC,EAAD,CACErF,GAAG,uBACHwH,cAAe,CACb,kBAAmB,0BAErBR,SAAUA,EACVlI,KAAMA,EACNY,QAASV,GAIT,kBAACyI,EAAA,EAAD,CAAUlI,QAAS,WAlDKsH,GAAa,GAkDQ7H,KAAgB0I,eAAa,GACxE,kBAAC,IAAD,MADF,QAIA,kBAACD,EAAA,EAAD,CAAUlI,QAAS,WAAOX,EAAM+I,eAAgB3I,KAAgB0I,eAAa,GAC3E,kBAAC,IAAD,MADF,WAOF,kBAAC,EAAD,CAAU5I,KAAM8H,EACd1E,MAAOtD,EAAMsD,MACbwC,SAAU9F,EAAM8F,SAChBE,UAAW,mBACXC,aAnDN,SAAoB5F,EAAOyF,GACzB9F,EAAMgJ,OAAOhJ,EAAMoB,GAAI,QAASf,GAChCL,EAAMgJ,OAAOhJ,EAAMoB,GAAI,WAAY0E,GACnCoC,KAiDI9H,YAAa8H,EACb1B,WAAY,cACZyC,UAAW,YCzHzB,SAAStD,EAAcG,GACnB,MAAiB,MAAbA,EACO,sBACa,MAAbA,EACA,wBAEA,uBAwBAoD,MApBf,SAAclJ,GACV,OAAO,6BACH,yBAAK2D,MAAM,YAAYvC,GAAIpB,EAAMoB,IAE7B,kBAAC,EAAD,CAAUV,cAAaV,EAAMwF,UAAWG,cAAeA,EAAc3F,EAAM8F,UAAWN,UAAWxF,EAAMwF,UAAWC,YAAa,kBAAMzF,EAAMgJ,OAAOhJ,EAAMoB,GAAI,aAAcpB,EAAMwF,cAEhL,yBAAK7B,MAAM,YAAYJ,KAAK,OAAOlE,MAAO,CAACqG,gBAAiBC,EAAc3F,EAAM8F,YAG3E9F,EAAMwF,UAAY,uBAAGhC,MAAM,iBAAiBD,KAAK,OAAOI,MAAM,YAAYvC,GAAG,YAAYpB,EAAMsD,OAAa,uBAAG5C,aAAYV,EAAMsD,MAAOC,KAAK,OAAOI,MAAM,aAAa3D,EAAMsD,OAG9K,yBAAKK,MAAM,aACX,kBAAC,EAAD,CAAUA,MAAM,eAAemC,SAAU9F,EAAM8F,SAAU1E,GAAIpB,EAAMoB,GAAIkC,MAAOtD,EAAMsD,MAAOyF,aAAc,kBAAM/I,EAAM+I,aAAa/I,EAAMoB,KAAK4H,OAAQhJ,EAAMgJ,c,uECJrK3J,GAAQ,CACViI,SAAU,QACV,4BAA6B,CAC3BA,SAAU,qBAyHD6B,OAjHf,SAAcnJ,GACV,IAAMoJ,EAAKpJ,EAAMoJ,GACjB,EAAwBnJ,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMkJ,EAAa,kBAAMlJ,GAAQ,IAC3BC,EAAc,kBAAMD,GAAQ,IAC5BmJ,EAGN,WACI,OAAOtJ,EAAMqF,MACT,IAAK,WACD,OAAO+D,EAAGG,WAbD,oBAa8BC,QAAQxJ,EAAMqF,KAAM,QAC/D,QACI,OAAO+D,EAAGG,WAfD,oBAe8BC,QAAQxJ,EAAMqF,KAAM,QARzDoE,GACd,EAAgCC,aAAcJ,GAA9C,mBAAOxH,EAAP,KAAc6H,EAAd,UA0BA,IAAIC,EAAQ,KAMZ,SAASC,EAAgBC,GACrBA,EAAe3G,KAAI,SAAC4G,GAAD,OAAUC,EAAiBD,EAAK3I,OAKvD,SAAS4I,EAAiB5I,GACtBgI,EAAGG,WA/Cc,oBA+CeU,IAAI7I,GAAI8I,SAkB5C,SAASC,EAAe/I,EAAIgJ,EAAOtI,GACnBsH,EAAGG,WAlEE,oBAkE2BU,IAAI7I,GAC5CiJ,OAAJ,eACKD,EAAQtI,IASjB,OA1CIA,IACA8H,EAjBJ,WACI,OAAO5J,EAAMoF,MACT,IAAK,YACD,OAAOtD,EAAMwI,KAAKC,QAAO,SAACN,GAAD,OAASA,EAAIO,OAAOhF,aAAWrC,KAAI,SAAC8G,GACzD,OAAO,eAAIA,EAAIO,WAEvB,IAAK,cACD,OAAO1I,EAAMwI,KAAKC,QAAO,SAACN,GAAD,OAAUA,EAAIO,OAAOhF,aAAWrC,KAAI,SAAC8G,GAC1D,OAAO,eAAIA,EAAIO,WAEvB,QACI,OAAO1I,EAAMwI,KAAKnH,KAAI,SAAC8G,GAAD,OAASA,EAAIO,WAMnCC,GAAWF,QAAO,SAAAR,GAAI,OAAIA,EAAKW,SAAW1K,EAAMyC,QAyCrD,6BACJkH,GAAW,4CACXC,GAAS,oCACR,yBAAMjG,MAAM,aACPiG,EAAMzG,KAAI,SAAAwH,GAAC,OAAI,kBAAC,EAAD,iBAAUA,EAAV,CAAaC,IAAKD,EAAEvJ,GAAI4H,OAAQmB,EAAgBpB,aAAciB,QAG9D,cAAfhK,EAAMoF,KACR,4BAAQzB,MAAM,cAAcjD,aAAW,eAAegB,KAAK,SAASkC,WAAY,kBAAMiG,EAAgBD,KACtG,kBAAC,IAAD,CAAmBvK,MAAOA,GACPsB,QAAS,kBAAMkJ,EAAgBD,OAElD,4BAAQjG,MAAM,cAAcjD,aAAW,YAAYgB,KAAK,SAASkC,WAAYyF,GAC7E,kBAAC,IAAD,CAEgBhK,MAAOA,GACPsB,QAAS0I,MAGxB,6BAEE,kBAAC,EAAD,CACEnJ,KAAMA,EACN0B,YAAa,mBACboE,UAAW,0BACXQ,WAAY,cACZyC,UAAW,SACXhD,aAhCZ,SAAsB5F,EAAOyF,IArB7B,SAAuBhE,EAAOgE,GAC1B,IAAM+E,EAAQC,cACd1B,EAAGG,WArDc,oBAqDeU,IAAIY,GAAOE,IAAI,CAC3C3J,GAAIyJ,EACJvH,MAAOxB,EACP0D,WAAW,EACXM,SAAUA,EACVkF,KAAMC,OAAOC,iBACbR,OAAQ1K,EAAMyC,MAcpB0I,CAAc9K,EAAOyF,GACrB1F,KA+BUA,YAAaA,EACbkD,MAAM,GACNwC,SAAS,IACTI,SAAS,QC5HzBkF,KAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMvC,GAAKgC,KAASQ,YAoKLC,OA9If,WACI,MAAsB5L,mBAAS,KAA/B,mBAAOwC,EAAP,KAAYqJ,EAAZ,KACA,EAAwB7L,mBAAS,OAAjC,mBAAOmF,EAAP,KAAa2G,EAAb,KACA,EAAwB9L,mBAAS,QAAjC,mBAAOoF,EAAP,KAAa2G,EAAb,KACM1C,EAAQF,GAAGG,WALG,kBAMpB,EAAgCG,aAAcJ,GAA9C,mBAAOxH,EAAP,KAAc6H,EAAd,KAEA,SAAS/G,EAAUd,GACfgK,EAAOhK,GAHX,KAcA,IAAIoB,EAAO,KAkGX,OAjGIpB,IACAoB,EAAOpB,EAAMwI,KAAKnH,KAAI,SAAC8G,GAAD,OAASA,EAAIO,WAgGhC,6BACFtH,GAAQ,kBAAC,EAAD,CAAQkC,KA3GrB,SAAoBtD,GAChBiK,EAAQjK,IA2GAuD,KAxGZ,SAAoBvD,GAChBkK,EAAQlK,IAwGAW,IAAKA,EACLG,UAAWA,EACXM,KAAMA,EACNW,gBA3BZ,SAAyBT,GAENgG,GAAGG,WAnGF,kBAmG8BU,IAAI7G,GAM3C8G,SACPtH,EAAU,MAmBFN,aAfZ,SAAsBR,GAClB,IAAM+I,EAAQC,cACd1B,GAAGG,WAhHa,kBAgHeU,IAAIY,GAAOE,IAAI,CAC1C3H,MAAOyH,EACPvH,MAAOxB,OAaV6H,GAAW,wCACVA,GAAW,kBAAC,GAAD,CACLvE,KAAMA,EACNC,KAAMA,EACN5C,IAAKA,EACL2G,GAAIA,OChKL6C,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.0ec31572.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useState, useRef } from 'react';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const inputTask = useRef(null);\r\n\r\n    function handleSubmit() {\r\n        props.onNewTab(input);\r\n        setInput('');\r\n        handleClose();\r\n    }\r\n  \r\n    function handleChange(e) {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button aria-label=\"Create new list\" onClick={handleOpen}\r\n                    style={{color:\"black\"}}\r\n            >Create New List</Button>\r\n            <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n            >\r\n            <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                Create a New List\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                Please provide a list name:\r\n                </Typography>\r\n                <form onSubmit={handleSubmit}>\r\n                {/* Changes text depending on the actions (editing or deleting) */}\r\n                <input id=\"tabInputText\" \r\n                        type=\"text\" \r\n                        maxlength = \"20\"\r\n                        placeholder={props.placeholder} \r\n                        ref={inputTask} \r\n                        value={input}\r\n                        onChange={handleChange}/> <br />\r\n                <input id=\"submitButton\" type=\"submit\" value={\"Create New List\"} />\r\n                <input type=\"button\" id=\"closeButton\" onClick={handleClose} value=\"Cancel\" />\r\n                </form>\r\n            </Box>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport \"./Tabs.css\"\r\nimport TabModal from \"./TabModal\"\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function FullWidthTabs(props) {\r\n  const theme = useTheme();\r\n//   const classes = useStyles(props);\r\n\r\n\r\n  const handleChange = (event, newValue) => {\r\n    props.handleTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Box sx={{width: \"100vw\"}}>\r\n        {/*New Tab Button*/}\r\n      {<TabModal id=\"tabModal\" onNewTab={props.handleNewTab}/>}\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={props.tab}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"inherit\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          TabIndicatorProps={{style: {background:'black'}}}\r\n           aria-label=\"Select List\"\r\n        >\r\n          {props.tabs.map((tab) => tab.tabId === \"0\" ? \r\n          \r\n            <Tab aria-label={tab.title}\r\n                role=\"button\"\r\n                label={tab.title}\r\n                id={`full-width-tab-`+tab.tabId}\r\n                aria-controls={`full-width-tabpanel-`+tab.tabId}\r\n                value={tab.tabId}/> :\r\n            // <button class=\"tab-button\" aria-label={tab.title} type=\"submit\" onKeyPress={handleChange} onClick={handleChange}>\r\n            <Tab \r\n\r\n                icon={\r\n                  <button class=\"tab-delete-button\" aria-label={\"delete \" + tab.title} type=\"submit\" onKeyPress={() => props.handleDeleteTab(tab.tabId)}>\r\n                  <Close role=\"button\" id={tab.tabId} onClick={() => props.handleDeleteTab(tab.tabId)}/>\r\n                  </button>\r\n                }\r\n                aria-label={tab.title}\r\n                role=\"button\"\r\n                iconPosition=\"start\"\r\n                label={tab.title}\r\n                id={`full-width-tab-`+tab.tabId}\r\n                aria-controls={`tab-`+tab.tabId}\r\n                value={tab.tabId}\r\n                />\r\n            // </button>\r\n            )}\r\n          {/* <Tab label=\"School\" {...a11yProps(0)} />\r\n          <Tab label=\"Chores\" {...a11yProps(1)} />\r\n          <Tab label=\"Random\" {...a11yProps(2)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      {/* <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={props.tab}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={props.tab} index={0} dir={theme.direction}>\r\n          Item One\r\n        </TabPanel>\r\n        <TabPanel value={props.tab} index={1} dir={theme.direction}>\r\n          Item Two\r\n        </TabPanel>\r\n        <TabPanel value={props.tab} index={2} dir={theme.direction}>\r\n          Item Three\r\n        </TabPanel>\r\n      </SwipeableViews> */}\r\n    </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n\r\n// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Tabs from '@mui/material/Tabs';\r\n// import Tab from '@mui/material/Tab';\r\n\r\n// export default function CenteredTabs(props) {\r\n\r\n//     // const style = useStyles({\r\n//     //     root: {\r\n//     //       backgroundColor: 'orange',\r\n//     //     },\r\n//     //     selected: {\r\n//     //       backgroundColor: 'purple',\r\n//     //     },\r\n//     // });\r\n\r\n//   const handleChange = (event, newValue) => {\r\n//     props.handleTab(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     // <Box style={style} sx={{ width: '100%', bgcolor: '#AF92C8', fontSize: \"30px\"}}>\r\n//     <Box  sx={{bgcolor: '#AF92C8', transform: 'scale(1.5)', marginLeft: '40%', marginBottom: '2%'}}>\r\n\r\n//       <Tabs \r\n//       selectionFollowsFocus=\"true\"\r\n//     //   tabItemContainerStyle={{width: '400px'}}\r\n//       textColor=\"black\" indicatorColor=\"none\" value={props.tab} onChange={handleChange} centered>\r\n//         <Tab label=\"List One\" />\r\n//         <Tab label=\"List Two\" />\r\n//         <Tab label=\"List Three\" />\r\n//       </Tabs>\r\n//     </Box>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport \"./Header.css\"\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport Tabs from \"./Tabs.js\"\r\n\r\n// JSS styles for our Dropdown.\r\nconst style = ({\r\n  root: {\r\n    // paddingLeft: '15px',\r\n    paddingTop: '170px',\r\n    transform: 'scale(1.5)'\r\n  }\r\n});\r\n\r\n\r\nfunction capitalize(str){\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n  \r\n  }\r\n\r\n\r\nfunction Header(props) {\r\n   \r\n    function DropDown(title, itemOne, itemTwo, itemThree, action) {\r\n\r\n        return (\r\n            <div class=\"dropdown\" style={style.root}>\r\n            <Box sx={{ minWidth: 120}}>\r\n              <FormControl fullWidth>\r\n                <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                  {title}\r\n                </InputLabel>\r\n                <NativeSelect\r\n                onChange={(e) => action(e.target.value)}\r\n                  defaultValue={0}\r\n                  inputProps={{\r\n                    type: 'view',\r\n                    id: 'uncontrolled-native',\r\n                  }}\r\n                >\r\n                  {/* Different options for our menu. */}\r\n                  <option value={itemOne}>{capitalize(itemOne)}</option>\r\n                  <option value={itemTwo}>{capitalize(itemTwo)}</option>\r\n                  <option value={itemThree}>{capitalize(itemThree)}</option>\r\n                </NativeSelect>\r\n              </FormControl>\r\n            </Box>\r\n            </div>\r\n          );\r\n        }\r\n  \r\n    return <div>\r\n        <div class=\"header\">\r\n          <div role=\"group\" class=\"title\" aria-label=\"To Do\">\r\n            <h1 id=\"title\">To do</h1>\r\n          </div>\r\n            <div class=\"view\">{DropDown(\"View\", \"all\", \"completed\", \"uncompleted\", props.view)}</div>\r\n            <div class=\"sort\">{DropDown(\"Sort\", \"date\", \"title\", \"priority\", props.sort)}</div>\r\n            <Tabs {...props}/>\r\n            {/* <LabTabs {...props}/> */}\r\n         </div>\r\n    </div>\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport \"./Checkbox.css\"\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nfunction checkComplete(completed) {\r\n    if (completed) {\r\n        return \"uncomplete task\"\r\n    } else {\r\n        return \"complete task\"\r\n    }\r\n\r\n}\r\n\r\nfunction Checkbox(props) {\r\n    return <div>\r\n        \r\n        {/* Renders a checkmark if the task is completed or not. */}\r\n        <button aria-pressed={props.completed} aria-label={checkComplete(props.completed)} role=\"button\" class=\"todo-checkbox\"  onClick={props.onCompleted} style={{backgroundColor: props.priorityColor}}>\r\n            \r\n\r\n            {props.completed ? <div class=\"completed\"> <CheckIcon id=\"CheckIcon\"/></div> : <div class=\"uncompleted\"></div>}\r\n        </button>\r\n        \r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Checkbox;","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport \"./OurModal.css\";\r\n\r\n// Material UI JSS styles for the Modal component. \r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'scale(1.4)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  marginLeft: '-215px'\r\n\r\n};\r\n\r\nexport default function OurModal(props) {\r\n  const [input, setInput] = useState(props.title); \r\n  const [priority, setPriority] = useState(props.priority);\r\n  const inputTask = useRef(null);\r\n\r\n  function handleClose() {\r\n    props.handleClose();\r\n  }\r\n  function handleSubmit() {\r\n    props.handleAction(input, priority);\r\n\r\n    // if we created a new task (not editing an existing one) reset input field\r\n    if (props.newItem) {\r\n      setInput('');\r\n      setPriority('2');\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n      setInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    // Creates a Modal for inputting new values.\r\n    <Modal\r\n      open={props.open}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\">\r\n      <Box sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n          {props.modalText}\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}> \r\n          <label>\r\n          {/* Changes text depending on the actions (editing or deleting) */}\r\n          <input id=\"inputText\" \r\n                  type=\"text\" \r\n                  maxlength = \"20\"\r\n                  placeholder={props.placeholder} \r\n                  ref={inputTask} \r\n                  value={input}\r\n                  onChange={handleChange}/>\r\n          </label>\r\n        <br/>\r\n        {/* Priority implementation */}\r\n        <Typography id=\"modal-modal-priority\" variant=\"h5\" component=\"h2\">\r\n            Please select a Priority\r\n        </Typography>\r\n          \r\n          {/* Changes text depending on the actions (editing or deleting) */}\r\n          <input id=\"priValueHigh\" \r\n                  name=\"priority\"\r\n                  type=\"radio\" \r\n                  value={'3'}\r\n                  checked={priority === '3'}\r\n                  onChange={ e => setPriority(e.currentTarget.value)\r\n                  }/>\r\n\r\n            <label for=\"priValueHigh\">High</label><br></br>\r\n            <input id=\"priValueMedium\" \r\n                  name=\"priority\"\r\n                  type=\"radio\" \r\n                  value={'2'}\r\n                  checked={priority === '2'}\r\n                  onChange={ e => setPriority(e.currentTarget.value)}/>\r\n\r\n            <label for=\"priValueMedium\">Medium</label><br></br>\r\n            <input id=\"priValueLow\"\r\n                  name=\"priority\" \r\n                  type=\"radio\" \r\n                  value={'1'}\r\n                  checked={priority === '1'}\r\n                  onChange={ (e) => {e.preventDefault(); setPriority(e.currentTarget.value);}}\r\n                  />\r\n            <label for=\"priValueLow\">Low</label><br></br>\r\n          <br/>\r\n          <input id=\"submitButton\" type=\"submit\" value={props.submitText} />\r\n          <input type=\"button\" id=\"closeButton\" onClick={props.handleClose} value=\"Cancel\" />\r\n      </form>\r\n    </Box>\r\n  </Modal>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./Dropdown.css\"\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport OurModal from \"./OurModal\"\r\nimport { useState } from \"react\"\r\n\r\n// MaterialUI JSS to style the Menu.\r\nconst StyledMenu = styled((props) => (\r\n        <Menu\r\n          elevation={0}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          {...props}\r\n        />\r\n      ))(({ theme }) => ({\r\n\r\n        // Material UI root themes for different incoperated components within the \r\n        // Menu iteself. \r\n        '& .MuiPaper-root': {\r\n          borderRadius: 6,\r\n\r\n          minWidth: 180,\r\n          color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n          boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n          '& .MuiMenu-list': {\r\n            padding: '4px 0',\r\n          },\r\n          '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n              fontSize: 18,\r\n              color: theme.palette.text.secondary,\r\n              marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n              backgroundColor: alpha(\r\n                theme.palette.primary.main,\r\n                theme.palette.action.selectedOpacity,\r\n              ),\r\n            },\r\n          },\r\n        },\r\n      }));\r\n      \r\n      export default function Dropdown(props) {\r\n        const [modalOpen, setModalOpen] = useState(false);\r\n        const handleModalOpen = () => setModalOpen(true);\r\n        const handleModalClose = () => setModalOpen(false);\r\n        const [anchorEl, setAnchorEl] = React.useState(null);\r\n        const open = Boolean(anchorEl);\r\n        \r\n        // Handles clicking on the dropdown arrow.\r\n        const handleClick = (event) => {\r\n          setAnchorEl(event.currentTarget);\r\n        };\r\n        // Handles closing the dropdown arrow.\r\n        const handleClose = () => {\r\n          setAnchorEl(null);\r\n        };\r\n        // Allows us to edit the Modal.\r\n        function handleEdit(input, priority) {\r\n          props.onEdit(props.id, \"title\", input);\r\n          props.onEdit(props.id, \"priority\", priority);\r\n          handleModalClose();\r\n        }\r\n        return (\r\n          <div>\r\n            {/* Creates a Menu that can open and close and supports a Modal/Deletion */}\r\n            <Button\r\n              id=\"demo-customized-button\"\r\n              aria-controls=\"demo-customized-menu\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? 'true' : undefined}\r\n              variant=\"contained\"\r\n              disableElevation\r\n              onClick={handleClick}\r\n              endIcon={<KeyboardArrowDownIcon />}>\r\n              </Button>\r\n              {/* this goes in button style={{\r\n                    bottom: \"90px\",\r\n                    left: \"600px\",\r\n                    transform: \"scale(1.5)\",\r\n                    background: \"none\",\r\n                    color: \"black\"\r\n                }} */}\r\n            <StyledMenu\r\n              id=\"demo-customized-menu\"\r\n              MenuListProps={{\r\n                'aria-labelledby': 'demo-customized-button',\r\n              }}\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              >\r\n\r\n              {/* Each action available for the Dropdown */}\r\n              <MenuItem onClick={() => {handleModalOpen(); handleClose()}} disableRipple>\r\n                <EditIcon />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {props.onDeleteTask(); handleClose()}} disableRipple>\r\n                <FileCopyIcon />\r\n                Delete\r\n              </MenuItem>\r\n            </StyledMenu>\r\n\r\n            {/* Creates a Modal component to edit a task. */}\r\n            <OurModal open={modalOpen}\r\n              title={props.title}\r\n              priority={props.priority}\r\n              modalText={\"Please edit task\"}\r\n              handleAction={handleEdit}\r\n              handleClose={handleModalClose}\r\n              submitText={\"Update Task\"}\r\n              closeText={\"Cancel\"}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n","import React from \"react\"\r\nimport \"./Task.css\"\r\nimport Checkbox from \"./Checkbox\"\r\nimport Dropdown from \"./Dropdown\"\r\n\r\n\r\nfunction priorityColor(priority) {\r\n    if (priority === '3') {\r\n        return \"rgba(167,38,8, 0.3)\";\r\n    } else if (priority === '2') {\r\n        return \"rgba(236,154,41, 0.3)\";\r\n    } else {\r\n        return \"rgba(84,140,47, 0.3)\";\r\n    }\r\n}\r\n\r\nfunction Task(props) {\r\n    return <div>\r\n        <div class=\"todo-task\" id={props.id}>\r\n            \r\n            <Checkbox aria-label={!props.completed} priorityColor={priorityColor(props.priority)} completed={props.completed} onCompleted={() => props.onEdit(props.id, \"completed\", !props.completed)}/>\r\n            \r\n            <div class=\"todo-item\" role=\"text\" style={{backgroundColor: priorityColor(props.priority)}}>\r\n                \r\n                {/* Checks if a task needs to be crossed out if completed. */}\r\n                {props.completed ? <p label=\"aksdaksdjaksjd\" role=\"text\" class=\"task-text\" id=\"complete\">{props.title}</p> : <p aria-label={props.title} role=\"text\" class=\"task-text\">{props.title}</p>}\r\n                \r\n                {/* Adds the dropdown box to edit and delete per task. */}\r\n                <div class=\"todo-edit\">\r\n                <Dropdown class=\"dropdown-bar\" priority={props.priority} id={props.id} title={props.title} onDeleteTask={() => props.onDeleteTask(props.id)} onEdit={props.onEdit}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Task;","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport OurModal from \"./OurModal\"\r\nimport \"./List.css\";\r\nimport { useState } from \"react\";\r\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport firebase from \"firebase/compat\";\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\n\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\r\n//   authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\r\n//   projectId: \"hmc-cs124-fa21-labs\",\r\n//   storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\r\n//   messagingSenderId: \"949410042946\",\r\n//   appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\r\n// };\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n\r\nconst style = {\r\n    fontSize: \"100px\",\r\n    '@media (max-width: 686px)': {\r\n      fontSize: \"100px !important\",\r\n    }\r\n  }\r\n\r\n\r\n\r\nconst tasks_collection = \"william-la-tasks\";\r\n\r\nfunction List(props) {\r\n    const db = props.db;\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const query = sortQuery();\r\n    const [value, loading, error] = useCollection(query);\r\n\r\n    function sortQuery() {\r\n        switch(props.sort) {\r\n            case \"priority\":\r\n                return db.collection(tasks_collection).orderBy(props.sort, 'desc');\r\n            default:\r\n                return db.collection(tasks_collection).orderBy(props.sort, 'asc');\r\n        }\r\n    }\r\n\r\n    function getTasks() {\r\n        switch(props.view) {\r\n            case \"completed\":\r\n                return value.docs.filter((doc) => doc.data().completed).map((doc) => {\r\n                    return {...doc.data()}\r\n                });\r\n            case \"uncompleted\":\r\n                return value.docs.filter((doc) => !doc.data().completed).map((doc) => {\r\n                    return {...doc.data()}\r\n                });\r\n            default:\r\n                return value.docs.map((doc) => doc.data());\r\n        }\r\n    }\r\n\r\n    let tasks = null;\r\n    if (value) {\r\n        tasks = getTasks().filter(task => task.tabNum === props.tab);\r\n    }\r\n\r\n    // Deletes ALL tasks.\r\n    function handleDeleteAll(completedTasks) {\r\n        completedTasks.map((task) => handleDeleteTask(task.id));\r\n\r\n    }\r\n\r\n    // Only deletes one task.\r\n    function handleDeleteTask(id) {\r\n        db.collection(tasks_collection).doc(id).delete();\r\n    }\r\n\r\n    // Adds a new task to our data.\r\n    function handleNewTask(value, priority) {\r\n        const newId = generateUniqueID();\r\n        db.collection(tasks_collection).doc(newId).set({\r\n            id: newId,\r\n            title: value,\r\n            completed: false,\r\n            priority: priority,\r\n            date: Date().toLocaleString(),\r\n            tabNum: props.tab\r\n        })\r\n        // props.addTaskToTab(newId);\r\n    }\r\n\r\n    // Edits a task value.\r\n    function handleEditTask(id, field, value) {\r\n        const doc = db.collection(tasks_collection).doc(id);\r\n        doc.update({\r\n            [field]: value,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(input, priority) {\r\n      handleNewTask(input, priority);\r\n      handleClose();\r\n    }\r\n    \r\n    return <div>\r\n      {loading && <h1>Task Loading</h1>}\r\n      {tasks && <>\r\n        <div  class=\"todo-body\">\r\n            {tasks.map(a => <Task {...a} key={a.id} onEdit={handleEditTask} onDeleteTask={handleDeleteTask}/>)}\r\n            {/* Different values have different actions for our circle button at the bottom. */}\r\n\r\n            {props.view === \"completed\" ?\r\n           <button class=\"aria-button\" aria-label=\"delete tasks\" type=\"submit\" onKeyPress={() => handleDeleteAll(tasks)}>\r\n           <RemoveCircleIcon  style={style}\r\n                              onClick={() => handleDeleteAll(tasks)}/>\r\n            </button>:\r\n           <button class=\"aria-button\" aria-label=\"new tasks\" type=\"submit\" onKeyPress={handleOpen}>\r\n           <AddCircleIcon \r\n  \r\n                           style={style}\r\n                           onClick={handleOpen}/>\r\n          </button>}\r\n         </div>\r\n            <div>\r\n              {/* Creates a Modal to add a new task. */}\r\n              <OurModal \r\n                open={open}\r\n                placeholder={\"Enter a new task\"}\r\n                modalText={\"Please enter a new task\"}\r\n                submitText={\"Create Task\"}\r\n                closeText={\"Cancel\"}\r\n                handleAction={handleSubmit}\r\n                handleClose={handleClose}\r\n                title=''\r\n                priority='2'\r\n                newItem={true}\r\n              />\r\n      </div>\r\n      </>}\r\n    </div>\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport Header from './Header';\r\nimport List from './List';\r\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\r\nimport { useState } from 'react';\r\nimport firebase from \"firebase/compat\";\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\r\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\r\n    projectId: \"hmc-cs124-fa21-labs\",\r\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\r\n    messagingSenderId: \"949410042946\",\r\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\n// const tabs = [\r\n//     {\r\n//         tabId: 0,\r\n//         title: \"School\",\r\n//         taskIds: []\r\n//     },\r\n//     {\r\n//         tabId: 1,\r\n//         title: \"Chores\",\r\n//         taskIds: []\r\n//     },\r\n//     {\r\n//         tabId: 2,\r\n//         title: \"Random\",\r\n//         taskIds: []\r\n//     },\r\n// ]\r\n\r\nconst tasks_collection = \"william-la-tasks\";\r\nconst tabs_collection = \"william-la-tab\";\r\nfunction App() {\r\n    const [tab, setTab] = useState(\"0\");\r\n    const [view, setView] = useState('all');\r\n    const [sort, setSort] = useState('date');\r\n    const query = db.collection(tabs_collection);\r\n    const [value, loading, error] = useCollection(query);\r\n\r\n    function handleTab(value) {\r\n        setTab(value);\r\n    }\r\n\r\n    function handleView(value) {\r\n        setView(value);\r\n    }\r\n\r\n    function handleSort(value) {\r\n        setSort(value);\r\n    }\r\n\r\n    let tabs = null;\r\n    if (value) {\r\n        tabs = value.docs.map((doc) => doc.data());\r\n    }\r\n\r\n    // function sortQuery() {\r\n    //     switch(sort) {\r\n    //         case \"priority\":\r\n    //             return db.collection(tasks_collection).orderBy(sort, 'desc');\r\n    //         default:\r\n    //             return db.collection(tasks_collection).orderBy(sort, 'asc');\r\n    //     }\r\n    // }\r\n\r\n    // function getTasks() {\r\n    //     switch(view) {\r\n    //         case \"completed\":\r\n    //             return value.docs.filter((doc) => doc.data().completed).map((doc) => {\r\n    //                 return {...doc.data()}\r\n    //             });\r\n    //         case \"uncompleted\":\r\n    //             return value.docs.filter((doc) => !doc.data().completed).map((doc) => {\r\n    //                 return {...doc.data()}\r\n    //             });\r\n    //         default:\r\n    //             return value.docs.map((doc) => doc.data());\r\n    //     }\r\n    // }\r\n\r\n    // let tasks = null;\r\n    // if (value) {\r\n    //     tasks = getTasks();\r\n    // }\r\n\r\n    // // Deletes ALL tasks.\r\n    // function handleDeleteAll(completedTasks) {\r\n    //     completedTasks.map((task) => handleDeleteTask(task.id));\r\n\r\n    // }\r\n\r\n    // // Only deletes one task.\r\n    // function handleDeleteTask(id) {\r\n    //     db.collection(tasks_collection).doc(id).delete();\r\n    // }\r\n\r\n    // // Adds a new task to our data.\r\n    // function handleNewTask(value, priority) {\r\n    //     const newId = generateUniqueID();\r\n    //     db.collection(tasks_collection).doc(newId).set({\r\n    //         id: newId,\r\n    //         title: value,\r\n    //         completed: false,\r\n    //         priority: priority,\r\n    //         date: Date().toLocaleString(),\r\n    //         tabNum: tab\r\n    //     })\r\n    //     addTaskToTab(newId);\r\n    // }\r\n\r\n    // // Edits a task value.\r\n    // function handleEdit(id, field, value) {\r\n    //     const doc = db.collection(tasks_collection).doc(id);\r\n    //     doc.update({\r\n    //         [field]: value,\r\n    //     })\r\n    // }\r\n\r\n    // function addTaskToTab(taskId) {\r\n    //     const doc = db.collection(tabs_collection).doc(tab);\r\n    //     let newTaskIds = doc.get(\"taskIds\");\r\n    //     newTaskIds.push(taskId)\r\n    //     doc.update({\r\n    //         taskIds: newTaskIds\r\n    //     });\r\n    // }\r\n\r\n    // Delete a tab and all of the tasks belong to it.\r\n    function handleDeleteTab(tabId) {\r\n        // Delete all tasks belong to tab\r\n        const tabDoc = db.collection(tabs_collection).doc(tabId);\r\n        // const tabTasks = tabDoc.get(\"taskIds\");\r\n        // if (tabTasks.length > 0) {\r\n        //     tabTasks.map((task) => db.collection(tasks_collection).doc(task).delete());\r\n        // }\r\n        // Delete tab\r\n        tabDoc.delete();\r\n        handleTab(\"0\");\r\n    }\r\n\r\n    // Adds a new tab.\r\n    function handleNewTab(value) {\r\n        const newId = generateUniqueID();\r\n        db.collection(tabs_collection).doc(newId).set({\r\n            tabId: newId,\r\n            title: value\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        {tabs && <Header view={handleView}\r\n                sort={handleSort}\r\n                tab={tab}\r\n                handleTab={handleTab}\r\n                tabs={tabs}\r\n                handleDeleteTab={handleDeleteTab}\r\n                handleNewTab={handleNewTab}\r\n                />}\r\n        {loading && <h1>Loading</h1>}\r\n        {!loading && <List \r\n                view={view}\r\n                sort={sort}\r\n                tab={tab}\r\n                db={db}\r\n                // addTaskToTab={addTaskToTab}\r\n                // list={tasks.filter(task => task.tabNum === tab)}\r\n                // onEdit={handleEdit}\r\n                // onNewTask={handleNewTask}\r\n                // onDeleteAll={handleDeleteAll}\r\n                // onDeleteTask={handleDeleteTask}\r\n            />\r\n        }\r\n    </div>;\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}