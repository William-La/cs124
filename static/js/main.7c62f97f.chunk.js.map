{"version":3,"sources":["Header.js","Checkbox.js","OurModal.js","Dropdown.js","Task.js","List.js","App.js","index.js"],"names":["style","paddingLeft","paddingTop","transform","Header","props","class","id","Box","sx","minWidth","FormControl","fullWidth","InputLabel","variant","htmlFor","NativeSelect","onChange","e","view","target","value","defaultValue","inputProps","type","Checkbox","onClick","onCompleted","completed","width","height","position","top","left","bgcolor","border","boxShadow","p","marginLeft","OurModal","useState","input","setInput","inputTask","useRef","Modal","open","Typography","component","modalText","onSubmit","handleAction","maxlength","placeholder","ref","StyledMenu","styled","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","color","palette","mode","grey","padding","fontSize","text","secondary","marginRight","spacing","backgroundColor","alpha","primary","main","action","selectedOpacity","Dropdown","modalOpen","setModalOpen","handleModalClose","React","anchorEl","setAnchorEl","Boolean","handleClose","Button","undefined","disableElevation","event","currentTarget","endIcon","marginTop","background","MenuListProps","onClose","MenuItem","disableRipple","onDeleteTask","title","onEditTask","Task","a","List","setOpen","filteredTodos","map","list","gridColumn","gridRow","onDeleteAll","onNewTask","initialData","App","data","setData","setView","setFilteredTodos","useEffect","filterHandler","filter","task","generateUniqueID","tasks","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c62f97f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\"\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport NativeSelect from '@mui/material/NativeSelect';\n\n// JSS styles for our Dropdown.\nconst style = {\n    paddingLeft: '155px',\n    paddingTop: '191px',\n    transform: 'scale(1.5)'\n}\n\nfunction Header(props) {\n    function DropDown() {\n        return (\n            <div class=\"dropdown\" style={style}>\n            <Box sx={{ minWidth: 120 }}>\n              <FormControl fullWidth>\n                <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n                  View\n                </InputLabel>\n                <NativeSelect\n                onChange={(e) => props.view(e.target.value)}\n                  defaultValue={0}\n                  inputProps={{\n                    type: 'view',\n                    id: 'uncontrolled-native',\n                  }}\n                >\n                  {/* Different options for our menu. */}\n                  <option value=\"all\">All</option>\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"uncompleted\">Uncompleted</option>\n                </NativeSelect>\n              </FormControl>\n            </Box>\n            </div>\n          );\n        }\n    return <div>\n        <div class=\"header\">\n            <h1 id=\"title\">To do</h1>\n            {DropDown()}\n         </div>\n    </div>\n}\nexport default Header;","import React from \"react\";\nimport \"./Checkbox.css\"\nimport CheckIcon from '@mui/icons-material/Check';\n\nfunction Checkbox(props) {\n    return <div>\n        {/* Renders a checkmark if the task is completed or not. */}\n        <div class=\"todo-checkbox\" onClick={props.onCompleted}>\n            {props.completed ? <div class=\"completed\"> <CheckIcon style={{width: \"100px\", height: \"100px\"}}/></div> : <div class=\"uncompleted\"></div>}\n        </div>\n    </div>\n\n}\n\nexport default Checkbox;","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\n\n// Material UI JSS styles for the Modal component. \nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'scale(1.4)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  marginLeft: '-215px'\n\n};\n\n\nexport default function OurModal(props) {\n  const [input, setInput] = useState(''); \n  const inputTask = useRef(null);\n  function handleChange(e) {\n      setInput(e.target.value);\n  }\n    return (\n      // Creates a Modal for inputting new values.\n      <Modal\n      open={props.open}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\n            {props.modalText}\n          </Typography>\n          <form onSubmit={() => {props.handleAction(input); setInput('');}}> \n          <label>\n          {/* Changes text depending on the actions (editing or deleting) */}\n          <input id=\"inputText\" \n                  type=\"text\" \n                  maxlength = \"30\"\n                  placeholder={props.placeholder} \n                  ref={inputTask} \n                  value={input} \n                  onChange={handleChange}/>\n          \n          </label>\n        <input id=\"submitButton\" type=\"submit\" value=\"Submit\" />\n        </form>\n\n        </Box>\n    </Modal>\n    );\n}","import React from \"react\";\nimport \"./Dropdown.css\"\nimport { styled, alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport OurModal from \"./OurModal\"\nimport { useState } from \"react\"\n\n// MaterialUI JSS to style the Menu.\nconst StyledMenu = styled((props) => (\n        <Menu\n          elevation={0}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          {...props}\n        />\n      ))(({ theme }) => ({\n\n        // Material UI root themes for different incoperated components within the \n        // Menu iteself. \n        '& .MuiPaper-root': {\n          borderRadius: 6,\n\n          minWidth: 180,\n          color:\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n          boxShadow:\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n          '& .MuiMenu-list': {\n            padding: '4px 0',\n          },\n          '& .MuiMenuItem-root': {\n            '& .MuiSvgIcon-root': {\n              fontSize: 18,\n              color: theme.palette.text.secondary,\n              marginRight: theme.spacing(1.5),\n            },\n            '&:active': {\n              backgroundColor: alpha(\n                theme.palette.primary.main,\n                theme.palette.action.selectedOpacity,\n              ),\n            },\n          },\n        },\n      }));\n      \n      export default function Dropdown(props) {\n        const [modalOpen, setModalOpen] = useState(false);\n        const handleModalOpen = () => setModalOpen(true);\n        const handleModalClose = () => setModalOpen(false);\n        const [anchorEl, setAnchorEl] = React.useState(null);\n        const open = Boolean(anchorEl);\n        \n        // Handles clicking on the dropdown arrow.\n        const handleClick = (event) => {\n          setAnchorEl(event.currentTarget);\n        };\n        // Handles closing the dropdown arrow.\n        const handleClose = () => {\n          setAnchorEl(null);\n        };\n        // Allows us to edit the Modal.\n        function handleEdit(input) {\n          props.onEditTask(props.id, input);\n          handleModalClose();\n        }\n      \n        return (\n          <div>\n            {/* Creates a Menu that can open and close and supports a Modal/Deletion */}\n            <Button\n              id=\"demo-customized-button\"\n              aria-controls=\"demo-customized-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              variant=\"contained\"\n              disableElevation\n              onClick={handleClick}\n              endIcon={<KeyboardArrowDownIcon />}\n              style={{marginRight: \"100px\",\n                      marginTop: \"35px\",\n                    left: \"820px\",\n                    transform: \"scale(1.5)\",\n                    background: \"none\",\n                    color: \"black\",\n                    position: \"fixed\"\n                }}\n            >  \n            </Button>\n            <StyledMenu\n              id=\"demo-customized-menu\"\n              MenuListProps={{\n                'aria-labelledby': 'demo-customized-button',\n              }}\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n\n            >\n              {/* Each action available for the Dropdown */}\n              <MenuItem onClick={() => {handleModalOpen(); handleClose()}} disableRipple>\n                <EditIcon />\n                Edit\n              </MenuItem>\n              <MenuItem onClick={() => {props.onDeleteTask(); handleClose()}} disableRipple>\n                <FileCopyIcon />\n                Delete\n              </MenuItem>\n            </StyledMenu>\n            {/* Creates a Modal component to edit a task. */}\n            <OurModal open={modalOpen}\n              onClose={handleModalClose}\n              placeholder={props.title}\n              modalText={\"Please edit task\"}\n              handleAction={handleEdit}\n            />\n          </div>\n        );\n      }\n\n","import React from \"react\"\nimport \"./Task.css\"\nimport Checkbox from \"./Checkbox\"\nimport Dropdown from \"./Dropdown\"\n\nfunction Task(props) {\n    return <div>\n        <div class=\"todo-task\" id={props.a}>\n            {/* Checks if a task has to render a checkbox if completed. */}\n            <Checkbox completed={props.a.completed} onCompleted={() => props.onCompleted(props.a.id)}/>\n            <div class=\"todo-item\">\n                {/* Checks if a task needs to be crossed out if completed. */}\n                {props.a.completed ? <p class=\"task-text\" id=\"complete\">{props.a.title}</p> : <p class=\"task-text\">{props.a.title}</p>}\n                <div class=\"todo-edit\">\n                    {/* Adds the dropdown box to edit and delete per task. */}\n                <Dropdown class=\"dropdown-bar\" id={props.a.id} title={props.a.title} onDeleteTask={() => props.onDeleteTask(props.a.id)} onEditTask={props.onEditTask}/>\n                </div> \n            </div>\n        </div>\n    </div>\n}\nexport default Task;","import React from \"react\";\nimport Task from \"./Task\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport OurModal from \"./OurModal\"\nimport \"./List.css\";\nimport { useState } from \"react\";\n\n\nfunction List(props) {\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    function handleSubmit(input) {\n      props.onNewTask(input);\n      handleClose();\n  }\n    \n    return <div>\n        <div class=\"todo-body\">\n            {/* Filters and checks which tasks should render depending on Completion value. */}\n            {props.filteredTodos ? \n            props.filteredTodos.map(a => <Task a={a} onCompleted={props.onCompleted} onEditTask={props.onEditTask} onDeleteTask={props.onDeleteTask}/>) :\n            props.list.map(a => <Task a={a} onCompleted={props.onCompleted} onEditTask={props.onEditTask} onDeleteTask={props.onDeleteTask}/>)}\n            {/* Different values have different actions for our circle button at the bottom. */}\n            {props.view === \"completed\" ?\n            <RemoveCircleIcon style={{fontSize:\"150px\",\n                                        gridColumn: \"1/ span 1\",\n                                        gridRow: \"9/ span 1\",\n                                        marginLeft: \"750px\",\n                                        }} \n            onClick={() => props.onDeleteAll(props.filteredTodos)}/>\n            :\n            <AddCircleIcon style={{fontSize:\"150px\",\n                                    gridColumn: \"1/ span 1\",\n                                    gridRow: \"9/ span 1\",\n                                    marginLeft: \"750px\",\n                                    }} \n            \n            onClick={handleOpen}/>\n            }\n            \n            <div>\n              {/* Creates a Modal to add a new task. */}\n              <OurModal \n                open={open}\n                placeholder={\"Enter a new task\"}\n                onNewTask={props.onNewTask}\n                modalText={\"Please enter a new task\"}\n                handleAction={handleSubmit}\n              />\n    </div>\n    </div>\n    </div>\n\n}\n\nexport default List;","import './style.css';\nimport Header from './Header';\nimport List from './List';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {  useState, useEffect } from 'react';\n\nconst initialData = [\n    {\n        id: \"0\",\n        title: \"William spills the tea\",\n        completed: false\n    },\n    {\n        id: \"1\",\n        title: \"Get very happy\",\n        completed: true\n    },\n    {\n        id: \"2\",\n        title: \"Grab dinner with 121\",\n        completed: false\n    },\n    {\n        id: \"3\",\n        title: \"Rename ourselves\",\n        completed: false\n    },\n];\n\n\n\n\nfunction App() {\n    const [data, setData] = useState(initialData);\n    const [view, setView] = useState('all');\n    const [filteredTodos, setFilteredTodos] = useState(null);\n\n    // An effect to ensure our updated filters work.\n    useEffect(() => {\n        filterHandler();\n      }, [data, view]);\n    \n\n    function handleView(value) {\n        setView(value);\n    }\n\n    // Switches between the different cases a todo task could be.\n    const filterHandler = () => {\n        switch(view) {\n          case \"completed\":\n            setFilteredTodos(data.filter((task) => task.completed === true));\n            break;\n          case \"uncompleted\":\n            setFilteredTodos(data.filter((task) => task.completed === false));\n            break;\n          default:\n            setFilteredTodos(data);\n            break;\n        }\n      };\n\n    // Deletes ALL tasks.\n    function handleDeleteAll(tasks) {\n        setData(data.filter(task => !(tasks.includes(task))))\n    }\n    // Only deletes one task.\n    function handleDeleteTask(id) {\n        setData(data.filter(task => task.id !== id))\n    }\n    // Adds a new task to our data.\n    function handleNewTask(value) {\n        setData([...data, {\n            id: generateUniqueID(),\n            title: value,\n            completed: false\n        }\n        \n        ])\n    }\n    // Changes the value of completed when a user checks off something.\n    function handleCompleted(id) {\n        setData( data.map(\n            task => task.id !== id\n            ? task\n            : {...task, [\"completed\"]: !task.completed}))\n        \n    }\n    // Edits a task value.\n    function handleEdit(id, value) {\n        setData( data.map(\n            task => task.id !== id\n            ? task\n            : {...task, [\"title\"]: value}))\n        \n    }\n    return <div>\n        <Header view={handleView}/>\n        <List list={data}\n                onNewTask={handleNewTask}\n                onCompleted={handleCompleted}\n                filteredTodos={filteredTodos}\n                onDeleteTask={handleDeleteTask}\n                onDeleteAll={handleDeleteAll}\n                onEditTask={handleEdit}\n                view={view}\n        />\n        </div>;\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}