{"version":3,"sources":["Header.js","Checkbox.js","OurModal.js","Dropdown.js","Task.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["style","paddingLeft","paddingTop","transform","Header","props","class","id","Box","sx","minWidth","FormControl","fullWidth","InputLabel","variant","htmlFor","NativeSelect","onChange","e","view","target","value","defaultValue","inputProps","type","Checkbox","onClick","onCompleted","completed","width","height","position","top","left","bgcolor","border","boxShadow","p","marginLeft","OurModal","useState","input","setInput","inputTask","useRef","Modal","open","aria-labelledby","aria-describedby","Typography","component","modalText","onSubmit","handleAction","maxlength","placeholder","ref","StyledMenu","styled","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","color","palette","mode","grey","padding","fontSize","text","secondary","marginRight","spacing","backgroundColor","alpha","primary","main","action","selectedOpacity","Dropdown","modalOpen","setModalOpen","handleModalClose","React","anchorEl","setAnchorEl","Boolean","handleClose","Button","aria-controls","aria-haspopup","aria-expanded","undefined","disableElevation","event","currentTarget","endIcon","marginTop","background","MenuListProps","onClose","MenuItem","disableRipple","onDeleteTask","title","onEditTask","Task","a","List","setOpen","filteredTodos","map","list","gridColumn","gridRow","onDeleteAll","onNewTask","initialData","App","data","setData","setView","setFilteredTodos","useEffect","filterHandler","filter","task","generateUniqueID","tasks","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fe30eda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\"\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\n\r\n// JSS styles for our Dropdown.\r\nconst style = {\r\n    paddingLeft: '155px',\r\n    paddingTop: '191px',\r\n    transform: 'scale(1.5)'\r\n}\r\n\r\nfunction Header(props) {\r\n    function DropDown() {\r\n        return (\r\n            <div class=\"dropdown\" style={style}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                  View\r\n                </InputLabel>\r\n                <NativeSelect\r\n                onChange={(e) => props.view(e.target.value)}\r\n                  defaultValue={0}\r\n                  inputProps={{\r\n                    type: 'view',\r\n                    id: 'uncontrolled-native',\r\n                  }}\r\n                >\r\n                  {/* Different options for our menu. */}\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"uncompleted\">Uncompleted</option>\r\n                </NativeSelect>\r\n              </FormControl>\r\n            </Box>\r\n            </div>\r\n          );\r\n        }\r\n    return <div>\r\n        <div class=\"header\">\r\n            <h1 id=\"title\">To do</h1>\r\n            {DropDown()}\r\n         </div>\r\n    </div>\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport \"./Checkbox.css\"\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nfunction Checkbox(props) {\r\n    return <div>\r\n        {/* Renders a checkmark if the task is completed or not. */}\r\n        <div class=\"todo-checkbox\" onClick={props.onCompleted}>\r\n            {props.completed ? <div class=\"completed\"> <CheckIcon style={{width: \"100px\", height: \"100px\"}}/></div> : <div class=\"uncompleted\"></div>}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Checkbox;","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\n// Material UI JSS styles for the Modal component. \r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'scale(1.4)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  marginLeft: '-215px'\r\n\r\n};\r\n\r\n\r\nexport default function OurModal(props) {\r\n  const [input, setInput] = useState(''); \r\n  const inputTask = useRef(null);\r\n  function handleChange(e) {\r\n      setInput(e.target.value);\r\n  }\r\n    return (\r\n      // Creates a Modal for inputting new values.\r\n      <Modal\r\n      open={props.open}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n            {props.modalText}\r\n          </Typography>\r\n          <form onSubmit={() => {props.handleAction(input); setInput('');}}> \r\n          <label>\r\n          {/* Changes text depending on the actions (editing or deleting) */}\r\n          <input id=\"inputText\" \r\n                  type=\"text\" \r\n                  maxlength = \"30\"\r\n                  placeholder={props.placeholder} \r\n                  ref={inputTask} \r\n                  value={input} \r\n                  onChange={handleChange}/>\r\n          \r\n          </label>\r\n        <input id=\"submitButton\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n\r\n        </Box>\r\n    </Modal>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./Dropdown.css\"\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport OurModal from \"./OurModal\"\r\nimport { useState } from \"react\"\r\n\r\n// MaterialUI JSS to style the Menu.\r\nconst StyledMenu = styled((props) => (\r\n        <Menu\r\n          elevation={0}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          {...props}\r\n        />\r\n      ))(({ theme }) => ({\r\n\r\n        // Material UI root themes for different incoperated components within the \r\n        // Menu iteself. \r\n        '& .MuiPaper-root': {\r\n          borderRadius: 6,\r\n\r\n          minWidth: 180,\r\n          color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n          boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n          '& .MuiMenu-list': {\r\n            padding: '4px 0',\r\n          },\r\n          '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n              fontSize: 18,\r\n              color: theme.palette.text.secondary,\r\n              marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n              backgroundColor: alpha(\r\n                theme.palette.primary.main,\r\n                theme.palette.action.selectedOpacity,\r\n              ),\r\n            },\r\n          },\r\n        },\r\n      }));\r\n      \r\n      export default function Dropdown(props) {\r\n        const [modalOpen, setModalOpen] = useState(false);\r\n        const handleModalOpen = () => setModalOpen(true);\r\n        const handleModalClose = () => setModalOpen(false);\r\n        const [anchorEl, setAnchorEl] = React.useState(null);\r\n        const open = Boolean(anchorEl);\r\n        \r\n        // Handles clicking on the dropdown arrow.\r\n        const handleClick = (event) => {\r\n          setAnchorEl(event.currentTarget);\r\n        };\r\n        // Handles closing the dropdown arrow.\r\n        const handleClose = () => {\r\n          setAnchorEl(null);\r\n        };\r\n        // Allows us to edit the Modal.\r\n        function handleEdit(input) {\r\n          props.onEditTask(props.id, input);\r\n          handleModalClose();\r\n        }\r\n      \r\n        return (\r\n          <div>\r\n            {/* Creates a Menu that can open and close and supports a Modal/Deletion */}\r\n            <Button\r\n              id=\"demo-customized-button\"\r\n              aria-controls=\"demo-customized-menu\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? 'true' : undefined}\r\n              variant=\"contained\"\r\n              disableElevation\r\n              onClick={handleClick}\r\n              endIcon={<KeyboardArrowDownIcon />}\r\n              style={{marginRight: \"100px\",\r\n                      marginTop: \"35px\",\r\n                    left: \"820px\",\r\n                    transform: \"scale(1.5)\",\r\n                    background: \"none\",\r\n                    color: \"black\",\r\n                    position: \"fixed\"\r\n                }}\r\n            >  \r\n            </Button>\r\n            <StyledMenu\r\n              id=\"demo-customized-menu\"\r\n              MenuListProps={{\r\n                'aria-labelledby': 'demo-customized-button',\r\n              }}\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n\r\n            >\r\n              {/* Each action available for the Dropdown */}\r\n              <MenuItem onClick={() => {handleModalOpen(); handleClose()}} disableRipple>\r\n                <EditIcon />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {props.onDeleteTask(); handleClose()}} disableRipple>\r\n                <FileCopyIcon />\r\n                Delete\r\n              </MenuItem>\r\n            </StyledMenu>\r\n            {/* Creates a Modal component to edit a task. */}\r\n            <OurModal open={modalOpen}\r\n              onClose={handleModalClose}\r\n              placeholder={props.title}\r\n              modalText={\"Please edit task\"}\r\n              handleAction={handleEdit}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n","import React from \"react\"\r\nimport \"./Task.css\"\r\nimport Checkbox from \"./Checkbox\"\r\nimport Dropdown from \"./Dropdown\"\r\n\r\nfunction Task(props) {\r\n    return <div>\r\n        <div class=\"todo-task\" id={props.a}>\r\n            {/* Checks if a task has to render a checkbox if completed. */}\r\n            <Checkbox completed={props.a.completed} onCompleted={() => props.onCompleted(props.a.id)}/>\r\n            <div class=\"todo-item\">\r\n                {/* Checks if a task needs to be crossed out if completed. */}\r\n                {props.a.completed ? <p class=\"task-text\" id=\"complete\">{props.a.title}</p> : <p class=\"task-text\">{props.a.title}</p>}\r\n                <div class=\"todo-edit\">\r\n                    {/* Adds the dropdown box to edit and delete per task. */}\r\n                <Dropdown class=\"dropdown-bar\" id={props.a.id} title={props.a.title} onDeleteTask={() => props.onDeleteTask(props.a.id)} onEditTask={props.onEditTask}/>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Task;","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport OurModal from \"./OurModal\"\r\nimport \"./List.css\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction List(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    function handleSubmit(input) {\r\n      props.onNewTask(input);\r\n      handleClose();\r\n  }\r\n    \r\n    return <div>\r\n        <div class=\"todo-body\">\r\n            {/* Filters and checks which tasks should render depending on Completion value. */}\r\n            {props.filteredTodos ? \r\n            props.filteredTodos.map(a => <Task a={a} onCompleted={props.onCompleted} onEditTask={props.onEditTask} onDeleteTask={props.onDeleteTask}/>) :\r\n            props.list.map(a => <Task a={a} onCompleted={props.onCompleted} onEditTask={props.onEditTask} onDeleteTask={props.onDeleteTask}/>)}\r\n            {/* Different values have different actions for our circle button at the bottom. */}\r\n            {props.view === \"completed\" ?\r\n            <RemoveCircleIcon style={{fontSize:\"150px\",\r\n                                        gridColumn: \"1/ span 1\",\r\n                                        gridRow: \"9/ span 1\",\r\n                                        marginLeft: \"750px\",\r\n                                        }} \r\n            onClick={() => props.onDeleteAll(props.filteredTodos)}/>\r\n            :\r\n            <AddCircleIcon style={{fontSize:\"150px\",\r\n                                    gridColumn: \"1/ span 1\",\r\n                                    gridRow: \"9/ span 1\",\r\n                                    marginLeft: \"750px\",\r\n                                    }} \r\n            \r\n            onClick={handleOpen}/>\r\n            }\r\n            \r\n            <div>\r\n              {/* Creates a Modal to add a new task. */}\r\n              <OurModal \r\n                open={open}\r\n                placeholder={\"Enter a new task\"}\r\n                onNewTask={props.onNewTask}\r\n                modalText={\"Please enter a new task\"}\r\n                handleAction={handleSubmit}\r\n              />\r\n    </div>\r\n    </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport './style.css';\r\nimport Header from './Header';\r\nimport List from './List';\r\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst initialData = [\r\n    {\r\n        id: \"0\",\r\n        title: \"William spills the tea\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: \"1\",\r\n        title: \"Get very happy\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Grab dinner with 121\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"Rename ourselves\",\r\n        completed: false\r\n    },\r\n];\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    const [data, setData] = useState(initialData);\r\n    const [view, setView] = useState('all');\r\n    const [filteredTodos, setFilteredTodos] = useState(null);\r\n\r\n    // An effect to ensure our updated filters work.\r\n    useEffect(() => {\r\n        filterHandler();\r\n      }, [data, view]);\r\n    \r\n\r\n    function handleView(value) {\r\n        setView(value);\r\n    }\r\n\r\n    // Switches between the different cases a todo task could be.\r\n    const filterHandler = () => {\r\n        switch(view) {\r\n          case \"completed\":\r\n            setFilteredTodos(data.filter((task) => task.completed === true));\r\n            break;\r\n          case \"uncompleted\":\r\n            setFilteredTodos(data.filter((task) => task.completed === false));\r\n            break;\r\n          default:\r\n            setFilteredTodos(data);\r\n            break;\r\n        }\r\n      };\r\n\r\n    // Deletes ALL tasks.\r\n    function handleDeleteAll(tasks) {\r\n        setData(data.filter(task => !(tasks.includes(task))))\r\n    }\r\n    // Only deletes one task.\r\n    function handleDeleteTask(id) {\r\n        setData(data.filter(task => task.id !== id))\r\n    }\r\n    // Adds a new task to our data.\r\n    function handleNewTask(value) {\r\n        setData([...data, {\r\n            id: generateUniqueID(),\r\n            title: value,\r\n            completed: false\r\n        }\r\n        \r\n        ])\r\n    }\r\n    // Changes the value of completed when a user checks off something.\r\n    function handleCompleted(id) {\r\n        setData( data.map(\r\n            task => task.id !== id\r\n            ? task\r\n            : {...task, [\"completed\"]: !task.completed}))\r\n        \r\n    }\r\n    // Edits a task value.\r\n    function handleEdit(id, value) {\r\n        setData( data.map(\r\n            task => task.id !== id\r\n            ? task\r\n            : {...task, [\"title\"]: value}))\r\n        \r\n    }\r\n    return <div>\r\n        <Header view={handleView}/>\r\n        <List list={data}\r\n                onNewTask={handleNewTask}\r\n                onCompleted={handleCompleted}\r\n                filteredTodos={filteredTodos}\r\n                onDeleteTask={handleDeleteTask}\r\n                onDeleteAll={handleDeleteAll}\r\n                onEditTask={handleEdit}\r\n                view={view}\r\n        />\r\n        </div>;\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}